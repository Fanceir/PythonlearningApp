[
    {
        "id": 1,
        "question": "Python 中的列表是如何定义的？",
        "options": [
            "[]",
            "{}",
            "()",
            "<>"
        ],
        "correctAnswer": "[]"
    },
    {
        "id": 2,
        "question": "Python 中用于注释单行的符号是什么？",
        "options": [
            "#",
            "//",
            "/*",
            "<!--"
        ],
        "correctAnswer": "#"
    },
    {
        "id": 3,
        "question": "Python 中的字典是什么数据结构？",
        "options": [
            "列表",
            "元组",
            "集合",
            "哈希表"
        ],
        "correctAnswer": "哈希表"
    },
    {
        "id": 4,
        "question": "Python 中用于导入模块的语法是什么？",
        "options": [
            "import module_name",
            "include module_name",
            "load module_name",
            "require module_name"
        ],
        "correctAnswer": "import module_name"
    },
    {
        "id": 5,
        "question": "在 Python 中，如何声明一个空元组？",
        "options": [
            "()",
            "[]",
            "{}",
            "<>"
        ],
        "correctAnswer": "()"
    },
    {
        "id": 6,
        "question": "在 Python 中，如何获取列表的长度？",
        "options": [
            "len(list)",
            "list.length()",
            "list.len()",
            "length(list)"
        ],
        "correctAnswer": "len(list)"
    },
    {
        "id": 7,
        "question": "Python 中的集合是否可以包含重复元素？",
        "options": [
            "可以",
            "不可以",
            "只有在特定情况下可以",
            "集合没有限制"
        ],
        "correctAnswer": "不可以"
    },
    {
        "id": 8,
        "question": "在 Python 中，如何定义一个匿名函数？",
        "options": [
            "lambda x: x+1",
            "def(x): x+1",
            "function(x) { return x+1 }",
            "x => x+1"
        ],
        "correctAnswer": "lambda x: x+1"
    },
    {
        "id": 9,
        "question": "Python 中如何进行字符串格式化？",
        "options": [
            "'Hello {}'.format(name)",
            "'Hello ' + name",
            "format('Hello ', name)",
            "name.format('Hello')"
        ],
        "correctAnswer": "'Hello {}'.format(name)"
    },
    {
        "id": 10,
        "question": "Python 中的列表是可变的，意味着？",
        "options": [
            "可以修改列表中的元素",
            "不能修改列表中的元素",
            "列表无法添加新元素",
            "列表无法删除元素"
        ],
        "correctAnswer": "可以修改列表中的元素"
    },
    {
        "id": 11,
        "question": "编写一个 Python 函数，接受一个整数列表，返回列表中的最大值和最小值。",
        "options": [
            "def find_min_max(lst): return min(lst), max(lst)",
            "def find_min_max(lst): return max(lst), min(lst)",
            "def find_min_max(lst): return sorted(lst)[0], sorted(lst)[-1]",
            "def find_min_max(lst): return lst[0], lst[-1]"
        ],
        "correctAnswer": "def find_min_max(lst): return min(lst), max(lst)"
    },
    {
        "id": 12,
        "question": "编写一个 Python 函数，接受一个字符串，返回该字符串是否为回文。",
        "options": [
            "def is_palindrome(s): return s == s[::-1]",
            "def is_palindrome(s): return s == ''.join(reversed(s))",
            "def is_palindrome(s): return s == s[::1]",
            "def is_palindrome(s): return s == s[-1::-1]"
        ],
        "correctAnswer": "def is_palindrome(s): return s == s[::-1]"
    },
    {
        "id": 13,
        "question": "编写一个 Python 函数，接受两个字符串，判断它们是否是字母异位词。",
        "options": [
            "def is_anagram(s1, s2): return sorted(s1) == sorted(s2)",
            "def is_anagram(s1, s2): return set(s1) == set(s2)",
            "def is_anagram(s1, s2): return s1.count() == s2.count()",
            "def is_anagram(s1, s2): return len(s1) == len(s2)"
        ],
        "correctAnswer": "def is_anagram(s1, s2): return sorted(s1) == sorted(s2)"
    },
    {
        "id": 14,
        "question": "编写一个 Python 函数，接受一个列表，返回该列表的所有元素的和。",
        "options": [
            "def sum_list(lst): return sum(lst)",
            "def sum_list(lst): return reduce(lambda x, y: x + y, lst)",
            "def sum_list(lst): return sum(map(int, lst))",
            "def sum_list(lst): return lst[0] + lst[1] + ... "
        ],
        "correctAnswer": "def sum_list(lst): return sum(lst)"
    },
    {
        "id": 15,
        "question": "编写一个 Python 函数，接受一个整数，判断它是否是素数。",
        "options": [
            "def is_prime(n): return all(n % i != 0 for i in range(2, int(n**0.5) + 1))",
            "def is_prime(n): return n > 1 and all(n % i != 0 for i in range(2, n))",
            "def is_prime(n): return n in [2, 3, 5, 7, 11]",
            "def is_prime(n): return n > 1 and not any(n % i == 0 for i in range(2, n))"
        ],
        "correctAnswer": "def is_prime(n): return all(n % i != 0 for i in range(2, int(n**0.5) + 1))"
    }
]